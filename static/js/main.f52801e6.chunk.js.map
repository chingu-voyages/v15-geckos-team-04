{"version":3,"sources":["img/mission-bg.jpeg","containers/Navbar.jsx","components/scaleButton.jsx","containers/LatestWeather.jsx","components/dayWeatherTable.jsx","containers/SixDaysWeather.jsx","components/loadingSpinner.jsx","components/temperatureChart.jsx","containers/ReportsChart.jsx","components/reportsRow.jsx","containers/ReportsTable.jsx","containers/MainWeatherSection.jsx","containers/Footer.jsx","containers/MissionInfo.jsx","app.js","index.js"],"names":["module","exports","Navbar","Container","id","className","Col","md","xs","to","spy","smooth","duration","scaleButton","props","Button","variant","onClick","scale","LatestWeather","error","sol","getDate","data","First_UTC","month","day","Math","floor","AT","mx","mn","PRE","av","dayWeatherTable","Table","vartiant","key","colSpan","earthDate","minTemperature","maxTemperature","SixDaysWeather","map","item","i","substring","slice","LoadingSpinner","role","temperatureChart","dataKey","width","height","margin","top","right","left","bottom","strokeDasharray","type","stroke","ReportsChart","minTemp","maxTemp","Row","name","time","length","year","avTemp","maxPre","avPre","minPre","ReportsTable","formatedTime","reverse","tableRows","index","responsive","sol_keys","defaultData","defData","Object","values","filter","MainWeatherSection","handleClick","setState","isCelsius","state","convertTemp","forEach","temp","formatDate","date","dateStr","Date","getUTCMonth","getUTCDate","getUTCFullYear","isLoaded","fetch","process","then","response","json","result","console","log","message","this","Component","Footer","href","Mission","useState","defaultBg","bg","setBg","useEffect","res","url","style","backgroundImage","sm","lg","title","src","allowFullScreen","frameBorder","Accordion","defaultActiveKey","Card","Header","Toggle","as","eventKey","Collapse","Body","App","document","addEventListener","navbar","querySelector","window","scrollY","classList","remove","add","MissionInfo","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f52801e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mission-bg.4e7f7768.jpeg\";","import React from 'react';\nimport { Link } from 'react-scroll';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Navbar = () => {\n\treturn (\n\t\t<Container id=\"navbar\">\n\t\t\t<Row className=\"justify-content-end\">\n\t\t\t\t<Col md=\"auto\" xs=\"6\">\n\t\t\t\t\t<Link to=\"latest-weather\" spy={true} smooth={true} duration={2000} className=\"link\">\n\t\t\t\t\t\tLatest Weather\n\t\t\t\t\t</Link>\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"auto\" xs=\"6\">\n\t\t\t\t\t<Link to=\"six-days-weather\" spy={true} smooth={true} duration={2000} className=\"link\">\n\t\t\t\t\t\tLast 6 Days Weather\n\t\t\t\t\t</Link>\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"auto\" xs=\"6\">\n\t\t\t\t\t<Link to=\"reports\" spy={true} smooth={true} duration={2000} className=\"link\">\n\t\t\t\t\t\tWeather Reports\n\t\t\t\t\t</Link>\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"auto\" xs=\"6\">\n\t\t\t\t\t<Link to=\"mission\" spy={true} smooth={true} duration={2000} className=\"link\">\n\t\t\t\t\t\tAbout InSight Mission\n\t\t\t\t\t</Link>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst scaleButton = props => {\n\treturn (\n\t\t<Button id=\"btn\" variant={props.variant} onClick={props.onClick}>\n\t\t\t{props.scale ? '°C' : '°F'}\n\t\t</Button>\n\t);\n};\n\nexport default scaleButton;\n","import React from 'react';\nimport Button from '../components/scaleButton';\n\nconst LatestWeather = props => {\n\treturn (\n\t\t<div id=\"latest-weather\" className=\"mars-bg\">\n\t\t\t<p className=\"error-msg\">{props.error ? 'Error occurred: default data currently displayed' : ''}</p>\n\t\t\t<div className=\"latest\">\t\t\n\t\t\t\t<div className=\"latest-data\">\n\t\t\t\t\t<h3>Sol {props.sol}</h3>\n\t\t\t\t\t<p className=\"text-center\">\n\t\t\t\t\t\t{props.getDate(props.data.First_UTC).month} {props.getDate(props.data.First_UTC).day}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tHigh: {Math.floor(props.data.AT.mx)}{' '}\n\t\t\t\t\t\t<Button variant=\"outline-light\" onClick={props.onClick} scale={props.scale} />\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLow: {Math.floor(props.data.AT.mn)}{' '}\n\t\t\t\t\t\t<Button variant=\"outline-light\" onClick={props.onClick} scale={props.scale} />\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Pressure: {Math.floor(props.data.PRE.av)} Pa</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default LatestWeather;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst dayWeatherTable = props => {\n\treturn (\n\t\t<Table vartiant=\"dark\" className=\"col-md m-4 text-center\" key={props.sol}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th colSpan=\"2\"> {props.earthDate} </th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>MIN</td>\n\t\t\t\t\t<td>{props.minTemperature}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>MAX</td>\n\t\t\t\t\t<td>{props.maxTemperature}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colSpan=\"2\"> Sol {props.sol}</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</Table>\n\t);\n};\n\nexport default dayWeatherTable;\n","import React from 'react';\nimport ScaleButton from '../components/scaleButton';\nimport DayTable from '../components/dayWeatherTable';\nimport { Row } from 'react-bootstrap';\n\nconst SixDaysWeather = props => {\n\tconst sol = props.sol;\n\n\treturn (\n\t\t<div id=\"six-days-weather\">\n\t\t\t<h3>\n\t\t\t\t<Row>\n\t\t\t\t\t<span className=\"mr-2\">Last 6 Days Weather,</span>\n\t\t\t\t\t<ScaleButton variant=\"outline-dark\" onClick={props.onClick} scale={props.scale} />\n\t\t\t\t</Row>\n\t\t\t</h3>\n\t\t\t<Row>\n\t\t\t\t{props.data\n\t\t\t\t\t.map((item, i) => (\n\t\t\t\t\t\t<DayTable\n\t\t\t\t\t\t\tkey={sol[i]}\n\t\t\t\t\t\t\tearthDate={item.First_UTC.substring(0, 10)}\n\t\t\t\t\t\t\tminTemperature={Math.floor(item.AT.mn)}\n\t\t\t\t\t\t\tmaxTemperature={Math.floor(item.AT.mx)}\n\t\t\t\t\t\t\tsol={sol[i]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t\t.slice(0, 6)}\n\t\t\t</Row>\n\t\t</div>\n\t);\n};\n\nexport default SixDaysWeather;\n","import React from 'react';\n\nconst LoadingSpinner = () => {\n\treturn (\n\t\t<div className=\"d-flex justify-content-center m-5\">\n\t\t\t<div className=\"spinner-border\" role=\"status\">\n\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst temperatureChart = props => {\n\tconst data = props.data;\n\tconst dataKey = props.dataKey;\n\n\treturn (\n\t\t<LineChart\n\t\t\twidth={500}\n\t\t\theight={300}\n\t\t\tdata={data}\n\t\t\tmargin={{\n\t\t\t\ttop: 5,\n\t\t\t\tright: 30,\n\t\t\t\tleft: 20,\n\t\t\t\tbottom: 5\n\t\t\t}}\n\t\t>\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t<XAxis />\n\t\t\t<YAxis />\n\t\t\t<Tooltip />\n\t\t\t<Legend />\n\t\t\t<Line type=\"monotone\" dataKey={dataKey} stroke=\"#82ca9d\" />\n\t\t</LineChart>\n\t);\n};\n\nexport default temperatureChart;\n","import React from 'react';\nimport TemperatureChart from '../components/temperatureChart';\nimport { Row } from 'react-bootstrap';\n\nconst ReportsChart = props => {\n\tconst data = props.data;\n\tconst minTemp = props.minTemp;\n\tconst maxTemp = props.maxTemp;\n\n\treturn (\n\t\t<Row className=\"justify-content-center mt-4 mb-4\">\n\t\t\t<TemperatureChart data={data} dataKey={minTemp} id=\"minTempChart\" />\n\t\t\t<TemperatureChart data={data} dataKey={maxTemp} id=\"maxTempChart\" />\n\t\t</Row>\n\t);\n};\n\nexport default ReportsChart;\n","import React from 'react';\n\nconst Row = props => {\n    const formatMonth = name => (name.length > 4 ? `${name.slice(0, 3)}.` : name);\n    \n\treturn (\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t{formatMonth(props.time.month)} {props.time.day}, {props.time.year}\n\t\t\t</td>\n\t\t\t<td className=\"border-right\">{props.sol}</td>\n\t\t\t<td>{props.maxTemp}</td>\n\t\t\t<td>{props.avTemp}</td>\n\t\t\t<td className=\"border-right\">{props.minTemp}</td>\n\t\t\t<td>{props.maxPre}</td>\n\t\t\t<td>{props.avPre}</td>\n\t\t\t<td>{props.minPre}</td>\n\t\t</tr>\n\t);\n};\n\nexport default Row;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport Row from '../components/reportsRow';\nimport Button from '../components/scaleButton';\n\nconst ReportsTable = props => {\n\tconst formatedTime = [ ...props.data ].reverse().map(item => {\n\t\treturn props.getDate(item.First_UTC);\n\t});\n\tconst sol = [ ...props.sol ].reverse();\n\tconst tableRows = [ ...props.data ].reverse().map((item, index) => {\n\t\treturn (\n\t\t\t<Row\n\t\t\t\tkey={sol[index]}\n\t\t\t\ttime={formatedTime[index]}\n\t\t\t\tsol={sol[index]}\n\t\t\t\tmaxTemp={Math.floor(item.AT.mx)}\n\t\t\t\tavTemp={Math.floor(item.AT.av)}\n\t\t\t\tminTemp={Math.floor(item.AT.mn)}\n\t\t\t\tmaxPre={Math.floor(item.PRE.mx)}\n\t\t\t\tavPre={Math.floor(item.PRE.av)}\n\t\t\t\tminPre={Math.floor(item.PRE.mn)}\n\t\t\t/>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div id=\"reports\">\n\t\t\t<h3>Daily Weather Report</h3>\n\t\t\t<Table responsive>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colSpan=\"2\">Time</th>\n\t\t\t\t\t\t<th colSpan=\"3\">\n\t\t\t\t\t\t\tTemperature <Button variant=\"outline-dark\" onClick={props.onClick} scale={props.scale} />\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th colSpan=\"3\">Pressure (Pa)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Date</td>\n\t\t\t\t\t\t<td className=\"border-right\">Sol</td>\n\t\t\t\t\t\t<td>Maximum</td>\n\t\t\t\t\t\t<td>Average</td>\n\t\t\t\t\t\t<td className=\"border-right\">Minimun</td>\n\t\t\t\t\t\t<td>Maximum</td>\n\t\t\t\t\t\t<td>Average</td>\n\t\t\t\t\t\t<td>Minimum</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{tableRows}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</div>\n\t);\n};\n\nexport default ReportsTable;\n","\nimport React, { Component } from 'react';\nimport defaultData from '../assets/defaultData';\nimport LatestWeather from './LatestWeather';\nimport SixDaysWeather from './SixDaysWeather';\nimport LoadingSpinner from '../components/loadingSpinner';\nimport ReportsChart from '../containers/ReportsChart';\nimport ReportsTable from './ReportsTable';\n\nconst { sol_keys } = defaultData;\nconst defData = Object.values(defaultData).filter(i => i.AT);\n\nclass MainWeatherSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: defData,\n      sol: sol_keys,\n      isLoaded: false,\n      error: null,\n      isCelsius: true\n    }\n  };\n \n  handleClick = () => {\n    this.setState({\n        isCelsius: !this.state.isCelsius,\n        data: this.convertTemp()\n    })\n  }\n        \n  convertTemp = () => {\n    const data = [...this.state.data]\n    data.forEach(sol => {\n      for(let key in sol){\n        if(key === 'AT'){\n          for(let temp in sol[key]){\n            this.state.isCelsius ? sol[key][temp] = sol[key][temp] * 9 / 5 + 32 : sol[key][temp] = (sol[key][temp] - 32) * 5 / 9;\n          }\n        }\n      }\n    })\n    return data;\n  }\n        \n componentDidMount() {\n   fetch(\n    process.env.REACT_APP_INSIGHT_MARS_WEATHER_API\n)\n  .then(response => response.json())\n  .then(\n    result => {\n      this.setState({\n        isLoaded: true,\n        data: Object.values(result).filter(i=>i.AT),\n        sol: result.sol_keys\n      });\n      console.log(this.state);\n    },\n    error => {\n      this.setState({\n        isLoaded: true,\n        error: error.message\n      });\n      console.log(error.message)\n    }\n  );\n }\n\n  formatDate = (date) => {\n    const Months = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];\n    const dateStr = new Date(date);\n    const month = Months[dateStr.getUTCMonth()];\n    const day = dateStr.getUTCDate();\n    const year = dateStr.getUTCFullYear();\n    \n    return {month, day, year}\n  }\n  \n  render() {\n    const { data, sol, error, isLoaded, isCelsius } = this.state;\n\n      if (error) {\n        return (\n        <div>\n          <LatestWeather data={data[data.length - 1]} sol = {sol[sol.length - 1]} scale={isCelsius} onClick={this.handleClick} getDate={this.formatDate} error={error}/>\n          <SixDaysWeather data = {data} sol = {sol} scale={isCelsius} onClick={this.handleClick}/>\n          <ReportsChart data={data} minTemp=\"AT.mn\" maxTemp= \"AT.mx\" />\n          <ReportsTable data={data} sol={sol} scale={isCelsius} onClick={this.handleClick} getDate={this.formatDate}/>\n        </div>)\n      } else if (!isLoaded) {\n        return <LoadingSpinner />;\n      } else {\n      return ( \n        <div>\n          <LatestWeather data={data[data.length - 1]} sol = {sol[sol.length - 1]} scale={isCelsius} onClick={this.handleClick} getDate={this.formatDate}/>\n          <SixDaysWeather data = {data} sol = {sol} scale={isCelsius} onClick={this.handleClick}/>\n          <ReportsTable data={data} sol={sol} scale={isCelsius} onClick={this.handleClick} getDate={this.formatDate}/>\n          <ReportsChart data={data} minTemp=\"AT.mn\" maxTemp= \"AT.mx\" />\n        </div>\n      );\n    }\n  }\n}\n\nexport default MainWeatherSection;\n","import React from 'react';\n\nconst Footer = () => {\n\treturn (\n\t\t<footer id=\"footer\" className=\"app-footer container-fluid text-center\">\n\t\t\t<span>\n\t\t\t\tCoded by <a href=\"https://github.com/chingu-voyages/v15-geckos-team-04\">Geckos Team-04</a> | 2020 |\n\t\t\t\tChingu Voyage 15\n\t\t\t</span>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import React, {useState, useEffect} from 'react';\nimport { Container, Row, Col, Accordion, Card, Button } from 'react-bootstrap';\nimport defaultBg from '../img/mission-bg.jpeg'\n\nconst Mission = () => {\n\t//  define default background in case the background image doesn't fetch properly\n\tconst [bg, setBg] = useState(defaultBg);\n\t  \n\t  useEffect (() => {\n\t\tfetch(`https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY`)\n\t\t  .then(res => res.json())\n\t\t  .then(data => setBg(data.url))\n\t  },[]);\n\n\treturn (\n\t\t<Container id=\"mission\" className=\"mission_wrapper\">\n\t\t\t<div className = 'overlay' style = {{backgroundImage: `url(${bg}`}} ></div>\n\t\t\t<Row className=\"row_mission\">\n\t\t\t\t<Col className=\"col\" xs={10} sm={9} md={8} lg={7}>\n\t\t\t\t\t<div className=\"mission_video\">\n\t\t\t\t\t\t<iframe title=\"inSight video\" src=\"https://youtube.com/embed/LKLITDmm4NA\" allowFullScreen={true} frameBorder=\"0\" />\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\n\t\t\t\t<Col className=\"col\" xs={10} sm={9} md={9} lg={5}>\n\t\t\t\t\t<div className=\"mission_information\">\n\t\t\t\t\t\t<Accordion defaultActiveKey=\"\">\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"light\" eventKey=\"0\">\n\t\t\t\t\t\t\t\t\t\tInSight — Studying the 'Inner Space' of Mars\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tThe main purpose of the Insight mission is to get more knowledge about the\n\t\t\t\t\t\t\t\t\t\t\tcomposition of Mars.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>InSight</strong>, short for <strong>I</strong>nterior\n\t\t\t\t\t\t\t\t\t\t\t<strong>E</strong>xploration using <strong>S</strong>eismic\n\t\t\t\t\t\t\t\t\t\t\t<strong>I</strong>nvestigations, <strong>G</strong>eodesy and\n\t\t\t\t\t\t\t\t\t\t\t<strong>H</strong>eat <strong>T</strong>ransport, is a Mars lander designed\n\t\t\t\t\t\t\t\t\t\t\tto give the Red Planet its first thorough checkup since it formed 4.5\n\t\t\t\t\t\t\t\t\t\t\tbillion years ago.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tIt is the first outer space robotic explorer to study in-depth the \"inner\n\t\t\t\t\t\t\t\t\t\t\tspace\" of Mars: its crust, mantle, and core.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"light\" eventKey=\"1\">\n\t\t\t\t\t\t\t\t\t\tWeather Data\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<p>The weather information above are provided by NASA's Insight Mars lander.</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tNASA’s InSight Mars lander takes continuous weather measurements\n\t\t\t\t\t\t\t\t\t\t\t(temperature, wind, pressure) on the surface of Mars at Elysium Planitia, a\n\t\t\t\t\t\t\t\t\t\t\tflat, smooth plain near Mars’ equator.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tInSight also measures tectonic activity and meteorite impacts on Mars today.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"light\" eventKey=\"2\">\n\t\t\t\t\t\t\t\t\t\tInterior of Mars\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"2\">\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tStudying Mars' interior structure answers key questions about the early\n\t\t\t\t\t\t\t\t\t\t\tformation of rocky planets in our inner solar system - Mercury, Venus,\n\t\t\t\t\t\t\t\t\t\t\tEarth, and Mars - more than 4 billion years ago, as well as rocky\n\t\t\t\t\t\t\t\t\t\t\texoplanets.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tThe lander uses cutting edge instruments, to delve deep beneath the surface\n\t\t\t\t\t\t\t\t\t\t\tand seek the fingerprints of the processes that formed the terrestrial\n\t\t\t\t\t\t\t\t\t\t\tplanets. It does so by measuring the planet's \"vital signs\": its \"pulse\"\n\t\t\t\t\t\t\t\t\t\t\t(seismology), \"temperature\" (heat flow), and \"reflexes\" (precision\n\t\t\t\t\t\t\t\t\t\t\ttracking).\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\tThis mission is part of NASA's Discovery Program for highly focused science\n\t\t\t\t\t\t\t\t\t\t\tmissions that ask critical questions in solar system science.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default Mission;\n","import React from 'react';\nimport Navbar from './containers/Navbar';\nimport MainWeatherSection from './containers/MainWeatherSection';\nimport Footer from './containers/Footer';\nimport MissionInfo from './containers/MissionInfo';\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n\tdocument.addEventListener('scroll', () => {\n\t\tlet navbar = document.querySelector('#navbar');\n\t\twindow.scrollY === 0 ? navbar.classList.remove('trans') : navbar.classList.add('trans');\n\t});\n\n\treturn (\n\t\t\t<Container>\n\t\t\t\t<Navbar />\n\t\t\t\t<MainWeatherSection />\n\t\t\t\t<MissionInfo />\n\t\t\t\t<Footer />\n\t\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n//import \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}